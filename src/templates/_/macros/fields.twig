{% macro display(field, parentId, disabled) %}
    {% import _self as fields %}
    {% import '_includes/forms' as forms %}

    {# {{ forms.textField({
        first: true,
        label: "Name"|t('app'),
        instructions: "What this section will be called in the CP."|t('app'),
        id: 'name',
        name: 'name',
        value: '',
        errors: [],
        autofocus: true,
        required: true,
    }) }} #}

    {% set id = field.name ~ "-" ~ parentId %}
    {% set name = field.name ~ '[' ~ parentId ~ ']' %}
    {% switch field.type %}
        {% case 'checkbox' %}
            <input type="checkbox" 
                id="{{ id }}" 
                name="{{ name }}" 
                {% if field.value %} checked="checked" {% endif %}
                {% if disabled %} disabled=disabled{% endif %}>
        {% case 'text' %}
            {{ fields.text(field, id, name, disabled) }}
        {% case 'type' %}
            {{ fields.dropdown(field, id, name, disabled) }}
        {% case 'author' %}
            {{ fields.dropdown(field, id, name, disabled) }}
        {% case 'section' %}
            {{ fields.dropdown(field, id, name, disabled) }}
        {% case 'dropdown' %}
            <select 
                id="{{ id }}" 
                data-select-{{ field.name }} 
                name="{{ name }}" 
                {% if disabled %} disabled=disabled{% endif %}
                >
                {% for option in field.options %}
                    <option value="{{ option.id }}">{{ option }} | {{ option.handle }}</option>
                {% endfor %}
            </select>

        {% case 'Asset' %}
            <p>{{ field.getValue() }}</p>
        {% case 'RichText' %}
            <textarea 
                id="{{ id }}" 
                name="{{ name }}"
                {% if disabled %} disabled=disabled{% endif %}
                >
                {{ field.value }}
            </textarea>
        {% case 'PlainText' %}
            {{ fields.text(field, id, name, disabled) }}
        {% default %}
            Did not match {{ field.type }}
    {% endswitch %}
{% endmacro %}

{% macro siteSelection(sites, parentId) %}
    {% import _self as fields %}
    
    {% set name = 'sites[' ~ parentId ~ ']' %}
    {% set id = 'sites-' ~ parentId %}

    {{ fields.multiselect(name, id, sites) }}
    {# {% for site in sites %}
        {% set value = site.id %}
        {% set id = 'sites-' ~ parentId ~ '-' ~ site.id %}
        {% set label = site.name %}
        {{ fields.checkbox(name, value, id, label) }}
    {% endfor %} #}
{% endmacro %}

{% macro dropdown(field, id, name, disabled) %}
    <select 
        id="{{ id }}" 
        data-value="{{ field.value|json_encode }}" 
        name="{{ name }}"
        data-name="{{ field.name }}"
        data-select-{{ field.type }}="{{ field.options|json_encode }}"
        {% if disabled %} disabled=disabled{% endif %}
        >
    </select>
{% endmacro %}

{% macro text(field, id, name, disabled) %}
    <input 
        type="text" 
        id="{{ id }}" 
        name="{{ name }}" 
        value="{{ field.value }}" 
        {% if disabled is defined and disabled %}disabled{% endif %}
        />
{% endmacro %}

{% macro checkbox(name, value, id, label) %}
    <input 
        type="checkbox" 
        id="{{ id }}" 
        name="{{ name }}" 
        value="{{ value }}"
        {% if disabled %} disabled=disabled{% endif %}
        />
    <label for="{{ id }}">{{ label }}</label>
{% endmacro %}

{% macro multiselect(name, id, options) %}
    <select multiple id="{{ id }}" name="{{ name }}" size="{{options | length }}">
        {% for option in options %}
            <option value="{{ option.id }}">{{ option.name }}</option>
        {% endfor %}
    </select>
{% endmacro %}